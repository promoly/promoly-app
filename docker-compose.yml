version: '3.8'

services:
  # Frontend - Next.js 14
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_AI_SERVICE_URL=http://localhost:8000
    depends_on:
      - backend
      - ai-service
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - promoly-network

  # Backend - NestJS
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://promoly:promoly123@postgres:5432/promoly
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - META_APP_ID=${META_APP_ID}
      - META_APP_SECRET=${META_APP_SECRET}
      - AI_SERVICE_URL=http://ai-service:8000
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - promoly-network

  # AI Service - FastAPI
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=postgresql://promoly:promoly123@postgres:5432/promoly
      - MODEL_NAME=gpt-4o-mini
    depends_on:
      - postgres
    volumes:
      - ./ai-service:/app
    networks:
      - promoly-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=promoly
      - POSTGRES_USER=promoly
      - POSTGRES_PASSWORD=promoly123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - promoly-network

  # Redis for caching and BullMQ
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - promoly-network

  # Worker for background jobs
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://promoly:promoly123@postgres:5432/promoly
      - REDIS_URL=redis://redis:6379
      - META_APP_ID=${META_APP_ID}
      - META_APP_SECRET=${META_APP_SECRET}
      - AI_SERVICE_URL=http://ai-service:8000
    depends_on:
      - postgres
      - redis
      - ai-service
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - promoly-network

volumes:
  postgres_data:
  redis_data:

networks:
  promoly-network:
    driver: bridge
